﻿@using Hv.Sos100.DataService.Statistics.Api.Models
@model List<EventStatistics>

<!DOCTYPE html>
<html>
<head>
    <title>Event</title>
    <link rel="stylesheet" href="~/css/styles.css">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap" rel="stylesheet">
</head>
<body>
    
    <nav class="navbar">
        <div class="navbar-logo">
            <a href="https://informatik5.ei.hv.se/eventivo"> <img src="~/lib/Bilder/loggaEventivo.png" width="70" height="70"> </a>
        </div>
        <ul class="navbar-nav">
           
            <li class="nav-item"><a href="/Home/Index">LOGGA UT</a></li>
        </ul>
    </nav>
  
    <nav class="categorymenu">
        <ul class="navbar-nav">
            <li class="nav-item"><a href="/Activity/Index">AKTIVITETER</a></li> 
            <li class="gradienttext"><a href="/Event/Index">EVENEMANG</a></li>
            <li class="nav-item"><a href="/Ad/Index">ANNONSER</a></li>
        </ul>
    </nav>

    <h1>EVENTSTATISTIK</h1>
    <hr>
   
    <div class="ChooseEvent"> 
        <label for="events">VÄLJ EVENT:</label>
        <select id="events" onchange="updateStatistics()">
            @foreach (var eventData in Model)
            {
                <option value="@eventData.EventStatisticsID">@eventData.EventStatisticsID</option>
            }
        </select>
    </div>

    <div class="chart-container">
        <div class="chart-info">
            <h2>KÖN</h2>
            <p>Statistik för hur många av vardera kön som anmält sig.</p>
        </div>
        <canvas id="GenderChart"></canvas>
    </div>

    <div class="chart-container">
        <div class="chart-info">
            <h2>ÅLDER</h2>
            <p>Statistik för hur många i varje åldersgrupp som anmält sig.</p>
        </div>
        <canvas id="AgeChart"></canvas>
    </div>

    <div class="chart-container">
        <div class="chart-info">
            <h2>ANMÄLNINGAR</h2>
            <p>Statistik för hur många som anmält sig till eventet.</p>
        </div>
        <canvas id="SignupChart"></canvas>
    </div>

    <div class="chart-container">
        <div class="chart-info">
            <h2>ANTAL EVENT</h2>
            <p>Statistik för hur många event av varje kategori.</p>
        </div>
        <canvas id="EventCategoryChart"></canvas>
    </div>
    <script>
       

        var ctxGender = document.getElementById('GenderChart').getContext('2d');
        var genderChart = new Chart(ctxGender, {
            type: 'pie',
            data: {
                labels: ['Kvinnor', 'Män'],
                datasets: [{
                    data: [0, 1],
                    backgroundColor: ['#666666', '#000000']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });

        var ctxAge = document.getElementById('AgeChart').getContext('2d');
        var ageChart = new Chart(ctxAge, {
            type: 'pie',
            data: {
                labels: ['Under 16', '16-30', '31-50', 'Över 50'],
                datasets: [{
                    data: [0, 1, 2, 3],
                    backgroundColor: ['#666666', '#000000', '#999999', '#CCCCCC']
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false
            }
        });

        // // Skapa diagram för antal anmälningar
        // var ctxViews = document.getElementById('SignupChart').getContext('2d');
        // var viewsChart = new Chart(ctxViews, {
        //     type: 'bar',
        //     data: {
        //         labels: ['Totalt antal anmälningar'],
        //         datasets: [{
        //             label: 'Totala anmälningar',
        //             data: [0],
        //             backgroundColor: '#e9e9e9',
        //             borderColor: '#FFF',
        //             borderWidth: 1
        //         }]
        //     },
        //     options: {
        //         responsive: true,
        //         maintainAspectRatio: false,
        //         scales: {
        //             yAxes: [{
        //                 ticks: {
        //                     beginAtZero: true
        //                 }
        //             }]
        //         }
        //     }
        // });

        // Längst upp presentera eventname, totalsignups, timestamp, category
        // Under visa diagram på ålder, kön

        function updateStatistics() {
            var selectedEventStatisticsId = parseInt(document.getElementById('events').value);
            var allEvents = JSON.parse('@Html.Raw(Json.Serialize(Model))');
            var selectedEvent = allEvents.find(e => e.eventStatisticsID === selectedEventStatisticsId);

            // viewsChart.data.datasets[0].data = [selectedEvent.totalSignups];
            ageChart.data.datasets[0].data = [
                selectedEvent.ageBelow16Signups,
                selectedEvent.age16To30Signups,
                selectedEvent.age31To50Signups,
                selectedEvent.ageAbove50Signups
            ];
            genderChart.data.datasets[0].data = [
                selectedEvent.femaleSignups,
                selectedEvent.maleSignups
            ];
            
            // viewsChart.update();
            genderChart.update();
            ageChart.update();
        }

    </script>

    @* <script src="~/js/statistics.js"></script> *@
   
</body>
</html>
